---
title: "Assignment-1 Q&A Bilge Salman (03796071), Salim Kaplan (0378856)"
format: pdf
editor_options: 
  chunk_output_type: console
---

```{r}
# load packages here
library(tidyverse)
library(tidyr)
library(stats)

theme_set(theme_light())
```

# Task Set 1

For tasks 1.1-1.3, assume you throw 3 dice -- normal dice with 6 sides each ;)

## Task 1.1

Create a data frame with all possible combinations (outcomes) that can result from throwing all the dice. (Each row should represent one possible outcome.) Print the first and last 10 rows of the data frame and state how many possible outcomes there are.

```{r}
# df for all possible combinations of outcomes from throwing three dice
all_combinations <- expand.grid(die1 = 1:6, die2 = 1:6, die3 = 1:6)

# the first and last 10 rows of the df
print(head(all_combinations, 10))
print(tail(all_combinations, 10))

# Number of possible outcomes
num_outcomes <- nrow(all_combinations)
cat("Number of possible outcomes:", num_outcomes)
```

## Task 1.2

Create a data frame showing all possible sums that can result from throwing the three dice along with their probabilities. Report the results in a summary table (data frame) and a plot (visual graph).

```{r}
# Calculate the sum of each row
all_combinations$sum <- rowSums(all_combinations)

# Calculate the probabilities of each sum
sum_probabilities <- as.data.frame(table(all_combinations$sum))
colnames(sum_probabilities) <- c("Sum", "Frequency")
sum_probabilities$Probability <- sum_probabilities$Frequency / num_outcomes

# the summary table
sum_probabilities

# plot
ggplot(sum_probabilities, aes(x = Sum, y = Probability)) +
  geom_bar(stat = "identity", fill = 'blue') +
  labs(title = "Probability distribution of sums from throwing three dice",
       x = "Sum",
       y = "Probability")
```

## Task 1.3

Compute the probability that the sum is $\geq$ `10`, *given* that at least one of the dice shows a `3`.

```{r}
# filtering the outcomes where at least one die shows a 3
outcomes_with_3 <- subset(all_combinations, die1 == 3 | die2 == 3 | die3 == 3)

# calculating the total number of the outcomes
total_outcomes_with_3 <- nrow(outcomes_with_3)

# outcomes where the sum is greater than 9
outcomes_with_sum_ge_10 <- subset(outcomes_with_3, sum >= 10)
num_outcomes_with_sum_ge_10 <- nrow(outcomes_with_sum_ge_10)

# probability calculation
probability_sum_ge_10_given_3 <- num_outcomes_with_sum_ge_10 / total_outcomes_with_3
cat("Probability that the sum is >= 10 given that at least one die shows a 3 is:", round(probability_sum_ge_10_given_3, 2))
```

\newpage

# Task Set 2

For Task 2.1-2.3, assume you toss a globe `10` times, leading to either land or water.

## Task 2.1

Compute the probability of all possible numbers of occurrence of land, given the candidate proportion of `.5`. Report the results in a summary table and a plot and indicate whether the plot shows a probability distribution or a likelihood function.

```{r}
# Simulating global tosses with function
simulate_global_tosses <- function(n,p) {
  
  data <- sample(c("L","W"), size = n, replace= TRUE, prob = c(p,1-p))
  return(data)
}


# Computing the probabilities for all possible numbers of occurrences of land
counter <- function(data,cp){
  
  n <- length(data)
  L <- sum(data == "L")
  
  probabilities <- sapply(0:n, function(k) {
    dbinom(k, n, cp)})

  results <- data.frame("Land" = 0:n, "Probability" = probabilities)
  return(results)
  
}

# we are assuming toss a globe 10 times with 0.5 probability
data <- simulate_global_tosses(10, .5)

# Computing probabilities
summary_table <- counter(data, cp = 0.5)

# Plot the probability distribution
ggplot(summary_table, aes(x = Land , y = Probability)) + 
  geom_bar(stat = "identity", fill = "purple") + 
  labs(x = "Number of Land Occurrences", 
       y = "Probability",
       title = "Binomial Distribution of Land Occurrences (p = 0.5)")
```

## Task 2.2

Assume you observe `7` water. Take the candidate proportions of land `cp =` `r seq(0,1,.1)`. For each of these candidates, compute the probability of observing `7` water. Report the results in a summary table and a plot and indicate whether the plot shows a probability distribution or a likelihood function.

```{r}
# Computing the probability of observing 7 waters for different candidate proportions of land
counter_2 <- function(n, W) {
  data_2 <-  c("W","W","W","W","W","W","W") # we are assuming we observed 7 water
  W <- sum(data_2 == "W")
  
  probabilities <- sapply(cp, function(p) {
    dbinom(W, n, 1 - p) 
  })
  results <- data.frame("Candidate Proportion" = cp, "Probability" = probabilities, check.names = F)
  return(results)
}

# Setting parameters
n <- 10
cp = seq(0,1,0.1)

# Computing probabilities
summary_table_2 <- counter_2(n, W)

# Plot the probability distribution
ggplot(summary_table_2, aes(x = `Candidate Proportion`, y = Probability)) + 
  geom_line(linewidth = 1, color = "purple") + 
  geom_point(color = "purple") +
  labs(x = "Candidate Proportion of Land", 
       y = "Probability of Observing 7 Waters",
       title = "Probability of Observing 7 Waters for Different Proportions of Land")
```

## Task 2.3

For each candidate proportion of land, compute the probability of all possible number of occurrences of land. Report the results in a summary table, showing the probability distributions as columns and the likelihood functions as rows.

```{r}
counter_3 <- function(n) {
  
  results_matrix <- matrix(NA, nrow = n + 1, ncol = length(cp))
  
  for (i in 1:length(cp)) {
    probabilities <- dbinom(0:n, n, cp[i])
    results_matrix[ ,i ] <- probabilities
  }
  
  results <- as.data.frame(results_matrix)
  rownames(results) <- paste("Land ", 0:n, sep = " ")
  colnames(results) <- cp
  return(results)
}


# Setting parameters
n <- 10
cp = seq(0,1,0.1)

# Compute results
summary_table_3 <- counter_3(n)
summary_table_3
```
